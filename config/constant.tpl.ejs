angular.module('{%- moduleName %}'{% if (deps) { %}, [{%= deps.map(function (name) { return '\'' + name + '\'' }).join(', ') %}]{% } %})
  {%
    constants.forEach(
      function (constant) {

        var isEndpoints = constant.name === 'apiConfig';
        var isKeyConstants = constant.name === 'keyConstants';


        <!--Do any constant specific build time updates here if needed. Example:-->
        if(isEndpoints) {
          var valueObject = eval("(" + constant.value + ')');
          var baseEndpoint = [valueObject.host, valueObject.path, valueObject.version].join('');

          Object.keys(valueObject).forEach(function(key) {
            // Append the baseEndpoint to the value IF
            // It is not a key defining the base endpoint (ex: host, path, version)
            // AND it is not a mock endpoint (an endpoint that start with '/mock' in the name.
            if(key !== 'host' && key !== 'path' && key !== 'version' && key !== 'baseEndpoint') {
              valueObject[key] = baseEndpoint + valueObject[key];
            }
            console.log(valueObject[key]);
          });

          constant.value = JSON.stringify(valueObject);
        }

        <!--Base64 encode the gateway keys for code obfuscation-->
        else if(isKeyConstants) {
          var valueObject = eval("(" + constant.value + ')');

          Object.keys(valueObject).forEach(function(key) {
            if((key === 'KEY' || key === 'KEY_HEADER') && valueObject[key]) {
              valueObject[key] = new Buffer(valueObject[key]).toString('base64');
              console.log('Base encoding - ' + key + ' - ' + valueObject[key]);
            }
          });

          constant.value = JSON.stringify(valueObject);
        }
  %}
 .constant('{%- constant.name %}', {%= constant.value %})

{% });

values.forEach(
  function (value) { %}
      .value('{%- value.name %}', {%=value.value %})
  {% }) %}
;